{"version":3,"sources":["InputTable.js","Score.js","PlayerNumber.js","App.js","reportWebVitals.js","index.js"],"names":["Select","error","number","value","onChange","numOfPlayer","Array","selectClassName","className","evt","parseInt","target","map","v","i","InputTable","data","red","white","numberOfPlayer","redContesting","yellow","eliminated","whiteContesting","redPlayerMismatch","whitePlayerMismatch","hasError","handleChange","name","field","split","newData","WWSC","redScore","whiteScore","winner","getResult","ThreePoint","AttackScore","AttackDefense","Score","PlayerNumber","useState","num","setNum","defaultValue","onClick","initialData","App","JSON","parse","stringify","setData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33e5577f.chunk.js","sourcesContent":["\n\nconst InputTable = ({ data, onChange }) => {\n  const { red, white, numberOfPlayer } = data;\n\n  const redContesting = numberOfPlayer - red.yellow - red.red - red.eliminated;\n  const whiteContesting = numberOfPlayer - white.yellow - white.red - white.eliminated;\n\n  const redPlayerMismatch = red.eliminated + red.yellow + red.red > numberOfPlayer\n  const whitePlayerMismatch = white.eliminated + white.yellow + white.red > numberOfPlayer\n  const hasError = redPlayerMismatch | whitePlayerMismatch\n\n  const handleChange = (name, value) => {\n    const field = name.split('-')\n    let newData = { ...data }\n    newData[field[0]][field[1]] = value\n    onChange(newData)\n  }\n\n  return (\n    <div className=\"input-table-container\">\n      <div className=\"error-container has-text-danger\">{hasError ? \"Error: Mismatch Player Number detected\" : \"\"}</div>\n      <table className=\"table input-table\">\n        <thead>\n          <tr>\n            <th>Ball</th>\n            <th className=\"has-text-danger\">Red Team</th>\n            <th>White Team</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Contesting Ball</td>\n            <td>{redContesting}</td>\n            <td>{whiteContesting}</td>\n          </tr>\n          <tr>\n            <td className=\"has-background-warning\">Yellow Flag</td>\n            <td><Select error={redPlayerMismatch} number={numberOfPlayer + 1} value={red.yellow} onChange={(data) => handleChange(\"red-yellow\", data)}></Select></td>\n            <td><Select error={whitePlayerMismatch} number={numberOfPlayer + 1} value={white.yellow} onChange={(data) => handleChange(\"white-yellow\", data)}></Select></td>\n          </tr>\n          <tr>\n            <td className=\"has-background-danger\">Red Flag</td>\n            <td><Select error={redPlayerMismatch} number={numberOfPlayer + 1} value={red.red} onChange={(data) => handleChange(\"red-red\", data)}></Select></td>\n            <td><Select error={whitePlayerMismatch} number={numberOfPlayer + 1} value={white.red} onChange={(data) => handleChange(\"white-red\", data)}></Select></td>\n          </tr>\n          <tr>\n            <td className=\"strike-out-label\">Strike Out</td>\n            <td><Select error={redPlayerMismatch} number={numberOfPlayer + 1} value={red.eliminated} onChange={(data) => handleChange(\"red-eliminated\", data)}></Select></td>\n            <td><Select error={whitePlayerMismatch} number={numberOfPlayer + 1} value={white.eliminated} onChange={(data) => handleChange(\"white-eliminated\", data)}></Select></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nconst Select = ({ error, number, value, onChange }) => {\n  const numOfPlayer = [...Array(number)]\n\n  const handleChange = (evt) => {\n    onChange(parseInt(evt.target.value, 10))\n  }\n\n  const selectClassName = error ? \"select is-danger\" : \"select\"\n\n  return (\n    <div className=\"control\">\n      <div className={selectClassName}>\n        <select value={value} onChange={handleChange}>\n          {numOfPlayer.map((v, i) => <option key={i}>{i}</option>)}\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default InputTable;\n","\nconst Score = ({ data }) => {\n  return (\n    <table className=\"table score-table\">\n      <thead>\n        <tr>\n          <th>Point Format</th>\n          <th className=\"has-text-danger\">Red Team</th>\n          <th>vs</th>\n          <th>White Team</th>\n        </tr>\n      </thead>\n      <tbody>\n        <WWSC data={data}></WWSC>\n        <ThreePoint data={data}></ThreePoint>\n        <AttackScore data={data}></AttackScore>\n        <AttackDefense data={data}></AttackDefense>\n      </tbody>\n    </table>\n  )\n}\n\nconst WWSC = ({ data }) => {\n  const { red, white, numberOfPlayer } = data\n\n  const redContesting = numberOfPlayer - red.yellow - red.red - red.eliminated;\n  const whiteContesting = numberOfPlayer - white.yellow - white.red - white.eliminated;\n\n  const redScore = redContesting * 5 + red.yellow * 2 + red.red * 1\n  const whiteScore = whiteContesting * 5 + white.yellow * 2 + white.red * 1\n\n  const winner = getResult(redScore, whiteScore)\n\n  return (\n    <tr>\n      <td>WWSC</td>\n      <td className={winner === 'red' ? 'has-background-primary' : null}>{redScore}</td>\n      <td>vs</td>\n      <td className={winner === 'white' ? 'has-background-primary' : null}>{whiteScore}</td>\n    </tr>\n  )\n}\n\nconst ThreePoint = ({ data }) => {\n  const { red, white, numberOfPlayer } = data\n\n  const redContesting = numberOfPlayer - red.yellow - red.red - red.eliminated;\n  const whiteContesting = numberOfPlayer - white.yellow - white.red - white.eliminated;\n\n  const redScore = redContesting * 3 + red.yellow * 2 + red.red * 1\n  const whiteScore = whiteContesting * 3 + white.yellow * 2 + white.red * 1\n\n  const winner = getResult(redScore, whiteScore)\n\n  return (\n    <tr>\n      <td>3-Point Contesting Ball WWSC</td>\n      <td className={winner === 'red' ? 'has-background-primary' : null}>{redScore}</td>\n      <td>vs</td>\n      <td className={winner === 'white' ? 'has-background-primary' : null}>{whiteScore}</td>\n    </tr>\n  )\n}\n\nconst AttackScore = ({ data }) => {\n  const { red, white, numberOfPlayer } = data\n\n  const redContesting = numberOfPlayer - red.yellow - red.red - red.eliminated;\n  const whiteContesting = numberOfPlayer - white.yellow - white.red - white.eliminated;\n\n  const redScore = numberOfPlayer * 3 - (whiteContesting * 3 + white.yellow * 2 + white.red * 1)\n  const whiteScore = numberOfPlayer * 3 - (redContesting * 3 + red.yellow * 2 + red.red * 1)\n\n  const winner = getResult(redScore, whiteScore)\n\n  return (\n    <tr>\n      <td className=\"has-background-black has-text-white\">Attack</td>\n      <td className={winner === 'red' ? 'has-background-primary' : null}>{redScore}</td>\n      <td>vs</td>\n      <td className={winner === 'white' ? 'has-background-primary' : null}>{whiteScore}</td>\n    </tr>\n  )\n}\n\nconst AttackDefense = ({ data }) => {\n  const { red, white, numberOfPlayer } = data\n\n  const redContesting = numberOfPlayer - red.yellow - red.red - red.eliminated;\n  const whiteContesting = numberOfPlayer - white.yellow - white.red - white.eliminated;\n\n  const redScore = numberOfPlayer * 3 - (whiteContesting * 3 + white.yellow * 2 + white.red * 1) + (redContesting * 3 + red.yellow * 2 + red.red * 1)\n  const whiteScore = numberOfPlayer * 3 - (redContesting * 3 + red.yellow * 2 + red.red * 1) + (whiteContesting * 3 + white.yellow * 2 + white.red * 1)\n\n  const winner = getResult(redScore, whiteScore)\n\n  return (\n    <tr>\n      <td>Attack Defense</td>\n      <td className={winner === 'red' ? 'has-background-primary' : null}>{redScore}</td>\n      <td>vs</td>\n      <td className={winner === 'white' ? 'has-background-primary' : null}>{whiteScore}</td>\n    </tr>\n  )\n}\n\nconst getResult = (red, white) => {\n  if (red > white) return 'red'\n  else if (white > red) return 'white'\n  else return 'draw'\n}\n\nexport default Score;\n","import { useState } from 'react'\n\nconst PlayerNumber = ({ onChange }) => {\n  const [num, setNum] = useState(7)\n  const numOfPlayer = [...Array(7)]\n\n  const handleChange = (evt) => {\n    const numberOfPlayer = parseInt(evt.target.value, 10)\n    setNum(numberOfPlayer)\n    onChange(numberOfPlayer)\n  }\n\n  const handleReset = () => {\n    onChange(num)\n  }\n\n  return (\n    <div className=\"player-num-container\">\n      <div className=\"player-num-label\">Number of Player</div>\n      <div className=\"control\">\n        <div className=\"select\">\n          <select onChange={handleChange} defaultValue={7}>\n            {numOfPlayer.map((v, i) => <option key={i}>{i + 1}</option>)}\n          </select>\n        </div>\n      </div>\n      <div className=\"buttons reset-container\">\n        <button className=\"button is-primary\" onClick={handleReset}>Reset</button>\n      </div>\n    </div >\n  )\n}\n\nexport default PlayerNumber;\n","import { useState } from 'react';\nimport './App.css';\nimport InputTable from './InputTable'\nimport Score from './Score'\nimport PlayerNumber from './PlayerNumber'\n\nconst initialData = {\n  numberOfPlayer: 7,\n  red: {\n    yellow: 0,\n    red: 0,\n    eliminated: 0\n  },\n  white: {\n    yellow: 0,\n    red: 0,\n    eliminated: 0\n  }\n}\n\nfunction App() {\n  const [data, setData] = useState(JSON.parse(JSON.stringify(initialData)))\n\n  const handleChange = (data) => {\n    setData(data)\n  }\n\n  const handlePlayerNumChange = (number) => {\n    // Reset Data\n    let newData = JSON.parse(JSON.stringify(initialData));\n    newData.numberOfPlayer = number\n    setData(newData)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title is-1\">Wiser Point</h1>\n      <PlayerNumber onChange={handlePlayerNumChange}></PlayerNumber>\n      <InputTable data={data} onChange={handleChange}></InputTable>\n      <Score data={data}></Score>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bulma/css/bulma.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}