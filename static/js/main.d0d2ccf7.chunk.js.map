{"version":3,"sources":["InputTable.js","Score.js","App.js","reportWebVitals.js","index.js"],"names":["InputTable","data","onChange","handleChange","evt","field","target","name","split","newData","value","className","type","inputmode","pattern","red","contesting","min","max","white","yellow","WWSC","redScore","whiteScore","winner","getResult","ThreePoint","AttackScore","AttackDefense","Score","initialData","App","useState","setData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0d2ccf7.chunk.js","sourcesContent":["\nconst InputTable = ({ data, onChange }) => {\n  const handleChange = (evt) => {\n    const field = evt?.target?.name.split('-')\n    let newData = { ...data }\n    newData[field[0]][field[1]] = evt.target.value\n    onChange(newData)\n  }\n  return (\n    <table className=\"table input-table\">\n      <thead>\n        <tr>\n          <th>Ball</th>\n          <th className=\"has-text-danger\">Red Team</th>\n          <th>White Team</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Contesting Ball</td>\n          <td><input name=\"red-contesting\" className=\"input\" type=\"number\" inputmode=\"numeric\" pattern=\"[0-9]*\" value={data.red.contesting} min=\"0\" max=\"7\" onChange={handleChange}></input></td>\n          <td><input name=\"white-contesting\" className=\"input\" type=\"number\" inputmode=\"numeric\" pattern=\"[0-9]*\" value={data.white.contesting} min=\"0\" max=\"7\" onChange={handleChange}></input></td>\n        </tr>\n        <tr>\n          <td className=\"has-background-warning\">Yellow Flag</td>\n          <td><input name=\"red-yellow\" className=\"input\" type=\"number\" inputmode=\"numeric\" pattern=\"[0-9]*\" value={data.red.yellow} min=\"0\" max=\"7\" onChange={handleChange}></input></td>\n          <td><input name=\"white-yellow\" className=\"input\" type=\"number\" inputmode=\"numeric\" pattern=\"[0-9]*\" value={data.white.yellow} min=\"0\" max=\"7\" onChange={handleChange}></input></td>\n        </tr>\n        <tr>\n          <td className=\"has-background-danger\">Red Flag</td>\n          <td><input name=\"red-red\" className=\"input\" type=\"number\" inputmode=\"numeric\" pattern=\"[0-9]*\" value={data.red.red} min=\"0\" max=\"7\" onChange={handleChange}></input></td>\n          <td><input name=\"white-red\" className=\"input\" type=\"number\" inputmode=\"numeric\" pattern=\"[0-9]*\" value={data.white.red} min=\"0\" max=\"7\" onChange={handleChange}></input></td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nexport default InputTable;\n","\nconst Score = ({ data }) => {\n  return (\n    <table className=\"table score-table\">\n      <thead>\n        <tr>\n          <th>Point Format</th>\n          <th className=\"has-text-danger\">Red Team</th>\n          <th>vs</th>\n          <th>White Team</th>\n        </tr>\n      </thead>\n      <tbody>\n        <WWSC data={data}></WWSC>\n        <ThreePoint data={data}></ThreePoint>\n        <AttackScore data={data}></AttackScore>\n        <AttackDefense data={data}></AttackDefense>\n      </tbody>\n    </table>\n  )\n}\n\nconst WWSC = ({ data }) => {\n  const { red, white } = data\n\n  const redScore = red.contesting * 5 + red.yellow * 2 + red.red * 1\n  const whiteScore = white.contesting * 5 + white.yellow * 2 + white.red * 1\n\n  const winner = getResult(redScore, whiteScore)\n\n  return (\n    <tr>\n      <td>WWSC</td>\n      <td className={winner === 'red' ? 'has-background-primary' : null}>{redScore}</td>\n      <td>vs</td>\n      <td className={winner === 'white' ? 'has-background-primary' : null}>{whiteScore}</td>\n    </tr>\n  )\n}\n\nconst ThreePoint = ({ data }) => {\n  const { red, white } = data\n\n  const redScore = red.contesting * 3 + red.yellow * 2 + red.red * 1\n  const whiteScore = white.contesting * 3 + white.yellow * 2 + white.red * 1\n\n  const winner = getResult(redScore, whiteScore)\n\n  return (\n    <tr>\n      <td>3-Point Contesting Ball WWSC</td>\n      <td className={winner === 'red' ? 'has-background-primary' : null}>{redScore}</td>\n      <td>vs</td>\n      <td className={winner === 'white' ? 'has-background-primary' : null}>{whiteScore}</td>\n    </tr>\n  )\n}\n\nconst AttackScore = ({ data }) => {\n  const { red, white } = data\n\n  const redScore = 21 - (white.contesting * 3 + white.yellow * 2 + white.red * 1)\n  const whiteScore = 21 - (red.contesting * 3 + red.yellow * 2 + red.red * 1)\n\n  const winner = getResult(redScore, whiteScore)\n\n  return (\n    <tr>\n      <td>Attack Score</td>\n      <td className={winner === 'red' ? 'has-background-primary' : null}>{redScore}</td>\n      <td>vs</td>\n      <td className={winner === 'white' ? 'has-background-primary' : null}>{whiteScore}</td>\n    </tr>\n  )\n}\n\nconst AttackDefense = ({ data }) => {\n  const { red, white } = data\n\n  const redScore = 21 - (white.contesting * 3 + white.yellow * 2 + white.red * 1) + (red.contesting * 3 + red.yellow * 2 + red.red * 1)\n  const whiteScore = 21 - (red.contesting * 3 + red.yellow * 2 + red.red * 1) + (white.contesting * 3 + white.yellow * 2 + white.red * 1)\n\n  const winner = getResult(redScore, whiteScore)\n\n  return (\n    <tr>\n      <td>Attack Defense</td>\n      <td className={winner === 'red' ? 'has-background-primary' : null}>{redScore}</td>\n      <td>vs</td>\n      <td className={winner === 'white' ? 'has-background-primary' : null}>{whiteScore}</td>\n    </tr>\n  )\n}\n\nconst getResult = (red, white) => {\n  if (red > white) return 'red'\n  else if (white > red) return 'white'\n  else return 'draw'\n}\n\nexport default Score;\n","import { useState } from 'react';\nimport './App.css';\nimport InputTable from './InputTable'\nimport Score from './Score'\n\nlet initialData = {\n  red: {\n    contesting: 7,\n    yellow: 0,\n    red: 0\n  },\n  white: {\n    contesting: 7,\n    yellow: 0,\n    red: 0\n  }\n}\n\nfunction App() {\n  const [data, setData] = useState(initialData)\n\n  const handleChange = (data) => {\n    setData(data)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title is-1\">Wiser Point</h1>\n      <InputTable data={data} onChange={handleChange}></InputTable>\n      <Score data={data}></Score>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bulma/css/bulma.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}